{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Random Forest Regressor(Lagos)","provenance":[{"file_id":"11wyBi6dT23r_kydIpwU0iYHqqBAQsBlR","timestamp":1644757357798}],"collapsed_sections":[],"authorship_tag":"ABX9TyNi1LYuz/RZl5Hes0vi1yNm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"D_avO2cM7Ktw","executionInfo":{"status":"ok","timestamp":1644758135093,"user_tz":-60,"elapsed":1210,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}}},"outputs":[],"source":["# import necessary modules\n","import pandas as pd\n","import numpy as np\n","import io\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","source":["# import csv file to google colab\n","from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"YnO3uHvE79sU","executionInfo":{"status":"ok","timestamp":1644759298221,"user_tz":-60,"elapsed":1163157,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"14542a5c-1e40-4a88-bf55-a1ee4266e49c"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-5bc36487-ca1e-433f-b649-d154afa9f7e7\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-5bc36487-ca1e-433f-b649-d154afa9f7e7\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Lagos.csv to Lagos.csv\n"]}]},{"cell_type":"code","source":["#read the csv file using pandas\n","df = pd.read_csv(io.BytesIO(uploaded['Lagos.csv']))\n","# Dataset is now stored in a Pandas Dataframe\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"dyE2eXUi9s2X","executionInfo":{"status":"ok","timestamp":1644759496330,"user_tz":-60,"elapsed":454,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"fc439ad2-210e-45ce-bd21-643b1944e511"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ddd76b5c-2315-4335-8a23-02b5cc1e78e9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MO</th>\n","      <th>DY</th>\n","      <th>HR</th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PRECTOTCORR</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>16.04</td>\n","      <td>10.25</td>\n","      <td>13.14</td>\n","      <td>8.12</td>\n","      <td>68.88</td>\n","      <td>0.0</td>\n","      <td>96.33</td>\n","      <td>3.42</td>\n","      <td>42.41</td>\n","      <td>7.09</td>\n","      <td>42.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.44</td>\n","      <td>8.76</td>\n","      <td>12.10</td>\n","      <td>7.39</td>\n","      <td>64.81</td>\n","      <td>0.0</td>\n","      <td>96.28</td>\n","      <td>3.98</td>\n","      <td>41.74</td>\n","      <td>8.36</td>\n","      <td>41.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>15.01</td>\n","      <td>7.45</td>\n","      <td>11.23</td>\n","      <td>6.71</td>\n","      <td>60.81</td>\n","      <td>0.0</td>\n","      <td>96.26</td>\n","      <td>4.67</td>\n","      <td>42.56</td>\n","      <td>9.33</td>\n","      <td>42.05</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>14.64</td>\n","      <td>6.63</td>\n","      <td>10.64</td>\n","      <td>6.35</td>\n","      <td>58.75</td>\n","      <td>0.0</td>\n","      <td>96.25</td>\n","      <td>5.22</td>\n","      <td>44.39</td>\n","      <td>9.86</td>\n","      <td>43.84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>14.31</td>\n","      <td>6.26</td>\n","      <td>10.28</td>\n","      <td>6.16</td>\n","      <td>58.44</td>\n","      <td>0.0</td>\n","      <td>96.27</td>\n","      <td>5.42</td>\n","      <td>46.11</td>\n","      <td>10.01</td>\n","      <td>45.73</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87667</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>19</td>\n","      <td>25.65</td>\n","      <td>15.55</td>\n","      <td>20.61</td>\n","      <td>11.54</td>\n","      <td>53.88</td>\n","      <td>0.0</td>\n","      <td>96.44</td>\n","      <td>1.72</td>\n","      <td>211.10</td>\n","      <td>2.94</td>\n","      <td>206.70</td>\n","    </tr>\n","    <tr>\n","      <th>87668</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>20</td>\n","      <td>24.99</td>\n","      <td>15.42</td>\n","      <td>20.21</td>\n","      <td>11.41</td>\n","      <td>55.44</td>\n","      <td>0.0</td>\n","      <td>96.51</td>\n","      <td>0.88</td>\n","      <td>220.66</td>\n","      <td>1.42</td>\n","      <td>215.61</td>\n","    </tr>\n","    <tr>\n","      <th>87669</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>21</td>\n","      <td>24.33</td>\n","      <td>15.33</td>\n","      <td>19.83</td>\n","      <td>11.35</td>\n","      <td>57.44</td>\n","      <td>0.0</td>\n","      <td>96.54</td>\n","      <td>0.30</td>\n","      <td>304.51</td>\n","      <td>0.41</td>\n","      <td>312.71</td>\n","    </tr>\n","    <tr>\n","      <th>87670</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>23.60</td>\n","      <td>14.99</td>\n","      <td>19.30</td>\n","      <td>11.11</td>\n","      <td>58.75</td>\n","      <td>0.0</td>\n","      <td>96.53</td>\n","      <td>1.03</td>\n","      <td>354.33</td>\n","      <td>1.59</td>\n","      <td>358.03</td>\n","    </tr>\n","    <tr>\n","      <th>87671</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>23</td>\n","      <td>22.23</td>\n","      <td>15.11</td>\n","      <td>18.66</td>\n","      <td>11.17</td>\n","      <td>64.25</td>\n","      <td>0.0</td>\n","      <td>96.49</td>\n","      <td>1.73</td>\n","      <td>2.59</td>\n","      <td>2.80</td>\n","      <td>3.84</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87672 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddd76b5c-2315-4335-8a23-02b5cc1e78e9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ddd76b5c-2315-4335-8a23-02b5cc1e78e9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ddd76b5c-2315-4335-8a23-02b5cc1e78e9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       YEAR  MO  DY  HR    T2M  ...     PS  WS10M   WD10M  WS50M   WD50M\n","0      2011   1   1   0  16.04  ...  96.33   3.42   42.41   7.09   42.55\n","1      2011   1   1   1  15.44  ...  96.28   3.98   41.74   8.36   41.59\n","2      2011   1   1   2  15.01  ...  96.26   4.67   42.56   9.33   42.05\n","3      2011   1   1   3  14.64  ...  96.25   5.22   44.39   9.86   43.84\n","4      2011   1   1   4  14.31  ...  96.27   5.42   46.11  10.01   45.73\n","...     ...  ..  ..  ..    ...  ...    ...    ...     ...    ...     ...\n","87667  2020  12  31  19  25.65  ...  96.44   1.72  211.10   2.94  206.70\n","87668  2020  12  31  20  24.99  ...  96.51   0.88  220.66   1.42  215.61\n","87669  2020  12  31  21  24.33  ...  96.54   0.30  304.51   0.41  312.71\n","87670  2020  12  31  22  23.60  ...  96.53   1.03  354.33   1.59  358.03\n","87671  2020  12  31  23  22.23  ...  96.49   1.73    2.59   2.80    3.84\n","\n","[87672 rows x 15 columns]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1Beqohw-Loc","executionInfo":{"status":"ok","timestamp":1644759674890,"user_tz":-60,"elapsed":547,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"13696577-cfd8-4b38-a49a-c03eca6f9ed9"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["YEAR           0\n","MO             0\n","DY             0\n","HR             0\n","T2M            0\n","T2MDEW         0\n","T2MWET         0\n","QV2M           0\n","RH2M           0\n","PRECTOTCORR    0\n","PS             0\n","WS10M          0\n","WD10M          0\n","WS50M          0\n","WD50M          0\n","dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ed89woYQ-MsG","executionInfo":{"status":"ok","timestamp":1644759676506,"user_tz":-60,"elapsed":13,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"de3854ca-3e17-482a-efe9-8c9e13cb3ab9"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 87672 entries, 0 to 87671\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   YEAR         87672 non-null  int64  \n"," 1   MO           87672 non-null  int64  \n"," 2   DY           87672 non-null  int64  \n"," 3   HR           87672 non-null  int64  \n"," 4   T2M          87672 non-null  float64\n"," 5   T2MDEW       87672 non-null  float64\n"," 6   T2MWET       87672 non-null  float64\n"," 7   QV2M         87672 non-null  float64\n"," 8   RH2M         87672 non-null  float64\n"," 9   PRECTOTCORR  87672 non-null  float64\n"," 10  PS           87672 non-null  float64\n"," 11  WS10M        87672 non-null  float64\n"," 12  WD10M        87672 non-null  float64\n"," 13  WS50M        87672 non-null  float64\n"," 14  WD50M        87672 non-null  float64\n","dtypes: float64(11), int64(4)\n","memory usage: 10.0 MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":364},"id":"x7UXAKGn-aB-","executionInfo":{"status":"ok","timestamp":1644759697810,"user_tz":-60,"elapsed":678,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"7f503223-1351-4b00-a095-97194b2f1435"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-bba8051e-17ba-4b90-b224-061ee47976f6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MO</th>\n","      <th>DY</th>\n","      <th>HR</th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PRECTOTCORR</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2015.500411</td>\n","      <td>6.522310</td>\n","      <td>15.731454</td>\n","      <td>11.500000</td>\n","      <td>25.745950</td>\n","      <td>17.989238</td>\n","      <td>21.867612</td>\n","      <td>14.253819</td>\n","      <td>68.398976</td>\n","      <td>0.134208</td>\n","      <td>96.493299</td>\n","      <td>2.359492</td>\n","      <td>180.915820</td>\n","      <td>3.570721</td>\n","      <td>180.101662</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.872679</td>\n","      <td>3.448893</td>\n","      <td>8.800909</td>\n","      <td>6.922226</td>\n","      <td>4.443264</td>\n","      <td>6.335005</td>\n","      <td>3.735550</td>\n","      <td>4.297520</td>\n","      <td>24.616281</td>\n","      <td>0.326442</td>\n","      <td>0.195142</td>\n","      <td>1.205449</td>\n","      <td>81.039375</td>\n","      <td>1.826835</td>\n","      <td>81.731228</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2011.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>11.990000</td>\n","      <td>-10.410000</td>\n","      <td>2.390000</td>\n","      <td>1.710000</td>\n","      <td>5.310000</td>\n","      <td>0.000000</td>\n","      <td>95.700000</td>\n","      <td>0.010000</td>\n","      <td>0.000000</td>\n","      <td>0.020000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2013.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>5.750000</td>\n","      <td>22.650000</td>\n","      <td>15.440000</td>\n","      <td>20.870000</td>\n","      <td>11.470000</td>\n","      <td>50.750000</td>\n","      <td>0.000000</td>\n","      <td>96.370000</td>\n","      <td>1.520000</td>\n","      <td>123.010000</td>\n","      <td>2.290000</td>\n","      <td>118.980000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2016.000000</td>\n","      <td>7.000000</td>\n","      <td>16.000000</td>\n","      <td>11.500000</td>\n","      <td>24.990000</td>\n","      <td>21.080000</td>\n","      <td>22.760000</td>\n","      <td>16.240000</td>\n","      <td>73.000000</td>\n","      <td>0.020000</td>\n","      <td>96.500000</td>\n","      <td>2.120000</td>\n","      <td>198.640000</td>\n","      <td>3.350000</td>\n","      <td>197.920000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2018.000000</td>\n","      <td>10.000000</td>\n","      <td>23.000000</td>\n","      <td>17.250000</td>\n","      <td>28.520000</td>\n","      <td>22.160000</td>\n","      <td>24.330000</td>\n","      <td>17.400000</td>\n","      <td>90.620000</td>\n","      <td>0.140000</td>\n","      <td>96.630000</td>\n","      <td>3.030000</td>\n","      <td>236.650000</td>\n","      <td>4.540000</td>\n","      <td>236.920000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2020.000000</td>\n","      <td>12.000000</td>\n","      <td>31.000000</td>\n","      <td>23.000000</td>\n","      <td>41.780000</td>\n","      <td>25.700000</td>\n","      <td>28.360000</td>\n","      <td>21.610000</td>\n","      <td>100.000000</td>\n","      <td>8.400000</td>\n","      <td>97.150000</td>\n","      <td>9.680000</td>\n","      <td>359.810000</td>\n","      <td>12.160000</td>\n","      <td>359.900000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bba8051e-17ba-4b90-b224-061ee47976f6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bba8051e-17ba-4b90-b224-061ee47976f6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bba8051e-17ba-4b90-b224-061ee47976f6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["               YEAR            MO  ...         WS50M         WD50M\n","count  87672.000000  87672.000000  ...  87672.000000  87672.000000\n","mean    2015.500411      6.522310  ...      3.570721    180.101662\n","std        2.872679      3.448893  ...      1.826835     81.731228\n","min     2011.000000      1.000000  ...      0.020000      0.000000\n","25%     2013.000000      4.000000  ...      2.290000    118.980000\n","50%     2016.000000      7.000000  ...      3.350000    197.920000\n","75%     2018.000000     10.000000  ...      4.540000    236.920000\n","max     2020.000000     12.000000  ...     12.160000    359.900000\n","\n","[8 rows x 15 columns]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# use the pands .corr() function to compute pairwise correlations for the dataframe\n","corr = df.corr()\n","# visualise the data with seaborn\n","mask = np.triu(np.ones_like(corr, dtype=np.bool))\n","sns.set_style(style = 'white')\n","f, ax = plt.subplots(figsize=(11, 9))\n","cmap = sns.diverging_palette(10, 250, as_cmap=True)\n","sns.heatmap(corr, mask=mask, cmap=cmap, \n","        square=True,\n","        linewidths=.5, cbar_kws={\"shrink\": .5}, ax=ax)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":618},"id":"c0CWGPcG-bCg","executionInfo":{"status":"ok","timestamp":1644759705335,"user_tz":-60,"elapsed":1425,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"ffb15aa5-7fd4-442a-971d-924d529a1f0e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5900d26850>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 792x648 with 2 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["# Dropping PRECTOTCORR from the dataset\n","df.drop(['PRECTOTCORR'], axis = 1, inplace = True)"],"metadata":{"id":"_TzzZsrE-z2s","executionInfo":{"status":"ok","timestamp":1644759715440,"user_tz":-60,"elapsed":1095,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gAzY5FFS-1NB","executionInfo":{"status":"ok","timestamp":1644759716029,"user_tz":-60,"elapsed":51,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"90e546bd-7486-444b-e245-a07a6f04d1c3"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-70f88e40-1275-414b-8c71-13a828ddfc80\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MO</th>\n","      <th>DY</th>\n","      <th>HR</th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>16.04</td>\n","      <td>10.25</td>\n","      <td>13.14</td>\n","      <td>8.12</td>\n","      <td>68.88</td>\n","      <td>96.33</td>\n","      <td>3.42</td>\n","      <td>42.41</td>\n","      <td>7.09</td>\n","      <td>42.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.44</td>\n","      <td>8.76</td>\n","      <td>12.10</td>\n","      <td>7.39</td>\n","      <td>64.81</td>\n","      <td>96.28</td>\n","      <td>3.98</td>\n","      <td>41.74</td>\n","      <td>8.36</td>\n","      <td>41.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>15.01</td>\n","      <td>7.45</td>\n","      <td>11.23</td>\n","      <td>6.71</td>\n","      <td>60.81</td>\n","      <td>96.26</td>\n","      <td>4.67</td>\n","      <td>42.56</td>\n","      <td>9.33</td>\n","      <td>42.05</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>14.64</td>\n","      <td>6.63</td>\n","      <td>10.64</td>\n","      <td>6.35</td>\n","      <td>58.75</td>\n","      <td>96.25</td>\n","      <td>5.22</td>\n","      <td>44.39</td>\n","      <td>9.86</td>\n","      <td>43.84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>14.31</td>\n","      <td>6.26</td>\n","      <td>10.28</td>\n","      <td>6.16</td>\n","      <td>58.44</td>\n","      <td>96.27</td>\n","      <td>5.42</td>\n","      <td>46.11</td>\n","      <td>10.01</td>\n","      <td>45.73</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70f88e40-1275-414b-8c71-13a828ddfc80')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-70f88e40-1275-414b-8c71-13a828ddfc80 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-70f88e40-1275-414b-8c71-13a828ddfc80');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   YEAR  MO  DY  HR    T2M  T2MDEW  ...   RH2M     PS  WS10M  WD10M  WS50M  WD50M\n","0  2011   1   1   0  16.04   10.25  ...  68.88  96.33   3.42  42.41   7.09  42.55\n","1  2011   1   1   1  15.44    8.76  ...  64.81  96.28   3.98  41.74   8.36  41.59\n","2  2011   1   1   2  15.01    7.45  ...  60.81  96.26   4.67  42.56   9.33  42.05\n","3  2011   1   1   3  14.64    6.63  ...  58.75  96.25   5.22  44.39   9.86  43.84\n","4  2011   1   1   4  14.31    6.26  ...  58.44  96.27   5.42  46.11  10.01  45.73\n","\n","[5 rows x 14 columns]"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Important Machine Learning modules\n","from sklearn.metrics import accuracy_score, mean_squared_error, r2_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import confusion_matrix"],"metadata":{"id":"mR6J1OJ-8Djg","executionInfo":{"status":"ok","timestamp":1644759718445,"user_tz":-60,"elapsed":951,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["#Prepare the training set\n","\n","# X = feature values, all the columns except the last column\n","X = df.iloc[:, 7: 14]\n","\n","# y = target values, last column of the data frame\n","y = df.iloc[:, 4: 7]"],"metadata":{"id":"-Qwg_gUo_IzU","executionInfo":{"status":"ok","timestamp":1644759719055,"user_tz":-60,"elapsed":9,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["X.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4V6Y7_qP_N-1","executionInfo":{"status":"ok","timestamp":1644759727837,"user_tz":-60,"elapsed":720,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"dab5dea6-7680-4b41-ce63-455a2f43cbf0"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['QV2M', 'RH2M', 'PS', 'WS10M', 'WD10M', 'WS50M', 'WD50M'], dtype='object')"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["y.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HoW3lkgh_TC3","executionInfo":{"status":"ok","timestamp":1644759729886,"user_tz":-60,"elapsed":17,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"52fe26d1-ef54-4952-c94d-c62e4321dbbd"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['T2M', 'T2MDEW', 'T2MWET'], dtype='object')"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bWFqDBsU_U2H","executionInfo":{"status":"ok","timestamp":1644759730881,"user_tz":-60,"elapsed":14,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"bd3c29ab-7fa2-45db-cfc4-daed22a6bf24"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-011f5ef4-f736-476c-8c91-6eb00fb9cbdc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.12</td>\n","      <td>68.88</td>\n","      <td>96.33</td>\n","      <td>3.42</td>\n","      <td>42.41</td>\n","      <td>7.09</td>\n","      <td>42.55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.39</td>\n","      <td>64.81</td>\n","      <td>96.28</td>\n","      <td>3.98</td>\n","      <td>41.74</td>\n","      <td>8.36</td>\n","      <td>41.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6.71</td>\n","      <td>60.81</td>\n","      <td>96.26</td>\n","      <td>4.67</td>\n","      <td>42.56</td>\n","      <td>9.33</td>\n","      <td>42.05</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6.35</td>\n","      <td>58.75</td>\n","      <td>96.25</td>\n","      <td>5.22</td>\n","      <td>44.39</td>\n","      <td>9.86</td>\n","      <td>43.84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6.16</td>\n","      <td>58.44</td>\n","      <td>96.27</td>\n","      <td>5.42</td>\n","      <td>46.11</td>\n","      <td>10.01</td>\n","      <td>45.73</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87667</th>\n","      <td>11.54</td>\n","      <td>53.88</td>\n","      <td>96.44</td>\n","      <td>1.72</td>\n","      <td>211.10</td>\n","      <td>2.94</td>\n","      <td>206.70</td>\n","    </tr>\n","    <tr>\n","      <th>87668</th>\n","      <td>11.41</td>\n","      <td>55.44</td>\n","      <td>96.51</td>\n","      <td>0.88</td>\n","      <td>220.66</td>\n","      <td>1.42</td>\n","      <td>215.61</td>\n","    </tr>\n","    <tr>\n","      <th>87669</th>\n","      <td>11.35</td>\n","      <td>57.44</td>\n","      <td>96.54</td>\n","      <td>0.30</td>\n","      <td>304.51</td>\n","      <td>0.41</td>\n","      <td>312.71</td>\n","    </tr>\n","    <tr>\n","      <th>87670</th>\n","      <td>11.11</td>\n","      <td>58.75</td>\n","      <td>96.53</td>\n","      <td>1.03</td>\n","      <td>354.33</td>\n","      <td>1.59</td>\n","      <td>358.03</td>\n","    </tr>\n","    <tr>\n","      <th>87671</th>\n","      <td>11.17</td>\n","      <td>64.25</td>\n","      <td>96.49</td>\n","      <td>1.73</td>\n","      <td>2.59</td>\n","      <td>2.80</td>\n","      <td>3.84</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87672 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-011f5ef4-f736-476c-8c91-6eb00fb9cbdc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-011f5ef4-f736-476c-8c91-6eb00fb9cbdc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-011f5ef4-f736-476c-8c91-6eb00fb9cbdc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["        QV2M   RH2M     PS  WS10M   WD10M  WS50M   WD50M\n","0       8.12  68.88  96.33   3.42   42.41   7.09   42.55\n","1       7.39  64.81  96.28   3.98   41.74   8.36   41.59\n","2       6.71  60.81  96.26   4.67   42.56   9.33   42.05\n","3       6.35  58.75  96.25   5.22   44.39   9.86   43.84\n","4       6.16  58.44  96.27   5.42   46.11  10.01   45.73\n","...      ...    ...    ...    ...     ...    ...     ...\n","87667  11.54  53.88  96.44   1.72  211.10   2.94  206.70\n","87668  11.41  55.44  96.51   0.88  220.66   1.42  215.61\n","87669  11.35  57.44  96.54   0.30  304.51   0.41  312.71\n","87670  11.11  58.75  96.53   1.03  354.33   1.59  358.03\n","87671  11.17  64.25  96.49   1.73    2.59   2.80    3.84\n","\n","[87672 rows x 7 columns]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"mXqFt-nA_V4g","executionInfo":{"status":"ok","timestamp":1644759736893,"user_tz":-60,"elapsed":473,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"ae4bab68-a58f-42c5-f671-7b73d174d28f"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-ada073d8-bbea-46e1-919d-7beb5be7dd6a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.04</td>\n","      <td>10.25</td>\n","      <td>13.14</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.44</td>\n","      <td>8.76</td>\n","      <td>12.10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15.01</td>\n","      <td>7.45</td>\n","      <td>11.23</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.64</td>\n","      <td>6.63</td>\n","      <td>10.64</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>14.31</td>\n","      <td>6.26</td>\n","      <td>10.28</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87667</th>\n","      <td>25.65</td>\n","      <td>15.55</td>\n","      <td>20.61</td>\n","    </tr>\n","    <tr>\n","      <th>87668</th>\n","      <td>24.99</td>\n","      <td>15.42</td>\n","      <td>20.21</td>\n","    </tr>\n","    <tr>\n","      <th>87669</th>\n","      <td>24.33</td>\n","      <td>15.33</td>\n","      <td>19.83</td>\n","    </tr>\n","    <tr>\n","      <th>87670</th>\n","      <td>23.60</td>\n","      <td>14.99</td>\n","      <td>19.30</td>\n","    </tr>\n","    <tr>\n","      <th>87671</th>\n","      <td>22.23</td>\n","      <td>15.11</td>\n","      <td>18.66</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87672 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ada073d8-bbea-46e1-919d-7beb5be7dd6a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ada073d8-bbea-46e1-919d-7beb5be7dd6a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ada073d8-bbea-46e1-919d-7beb5be7dd6a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["         T2M  T2MDEW  T2MWET\n","0      16.04   10.25   13.14\n","1      15.44    8.76   12.10\n","2      15.01    7.45   11.23\n","3      14.64    6.63   10.64\n","4      14.31    6.26   10.28\n","...      ...     ...     ...\n","87667  25.65   15.55   20.61\n","87668  24.99   15.42   20.21\n","87669  24.33   15.33   19.83\n","87670  23.60   14.99   19.30\n","87671  22.23   15.11   18.66\n","\n","[87672 rows x 3 columns]"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Splitting the dataset into trainingset and testset\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)"],"metadata":{"id":"ayalYSKF_WtB","executionInfo":{"status":"ok","timestamp":1644759746631,"user_tz":-60,"elapsed":608,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["regressor = RandomForestRegressor(n_estimators=100, random_state=42)\n","regressor.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WT6Hvn2y_ybR","executionInfo":{"status":"ok","timestamp":1644759789223,"user_tz":-60,"elapsed":42045,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"2c81172e-7e34-4f2f-9a64-02f7b54f8dd1"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(random_state=42)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["predictions = regressor.predict(X_test)"],"metadata":{"id":"EdzG87fUA7ng","executionInfo":{"status":"ok","timestamp":1644759789838,"user_tz":-60,"elapsed":666,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qp8NGCi6BPHm","executionInfo":{"status":"ok","timestamp":1644759789841,"user_tz":-60,"elapsed":45,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"61d77fc4-042e-40fd-b643-790e90ee4bb2"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[22.1034, 20.9423, 21.5238],\n","       [22.5738, 21.8537, 22.2154],\n","       [36.391 ,  6.9919, 21.693 ],\n","       ...,\n","       [23.4507, 22.5318, 22.9896],\n","       [28.6305, 21.5364, 25.0831],\n","       [22.0862, 21.6322, 21.8594]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["predictions[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"78PzoB7oBQ8z","executionInfo":{"status":"ok","timestamp":1644759789843,"user_tz":-60,"elapsed":42,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"cc69cd14-0712-4886-8761-bbeec66ee39c"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([22.5738, 21.8537, 22.2154])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","import math\n","\n","mse = mean_squared_error(y_test, predictions)\n","rmse = math.sqrt(mse)\n","\n","print('Mean Squared Error',mse)\n","print('Root Mean Squared Error',rmse)\n","print('Accuracy for Random Forest',100*max(0,rmse))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c4pchabIWTPA","executionInfo":{"status":"ok","timestamp":1644759789846,"user_tz":-60,"elapsed":40,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"a73f2ae6-63b1-43a0-d800-2ebc51e2c269"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error 0.01705199462119476\n","Root Mean Squared Error 0.13058328614793993\n","Accuracy for Random Forest 13.058328614793993\n"]}]},{"cell_type":"code","source":["#Import scikit-learn metrics module for accuracy calculation\n","from sklearn.metrics import r2_score\n","\n","# Model Accuracy, how often is the regressor correct?\n","Accuracy = r2_score(y_test, predictions)\n","print(Accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OnNrxODAS4-v","executionInfo":{"status":"ok","timestamp":1644759789848,"user_tz":-60,"elapsed":36,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"5cc9ffb3-c4ca-432b-dc36-eab4ac2533b5"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9992858836007423\n"]}]},{"cell_type":"code","source":["plt.figure()\n","plt.plot(predictions, \"r^\", label=\"RandomForestRegressor\")\n","\n","plt.tick_params(axis=\"x\", which=\"both\", bottom=False, top=False, labelbottom=False)\n","plt.ylabel(\"predicted\")\n","plt.xlabel(\"training samples\")\n","plt.legend(loc=\"best\")\n","plt.title(\"Regressor predictions and their average\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"5QV9EcHvrDUS","executionInfo":{"status":"ok","timestamp":1644759791014,"user_tz":-60,"elapsed":1194,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"5ae82994-6e74-4a35-b9c8-a99101388ddc"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]}]}