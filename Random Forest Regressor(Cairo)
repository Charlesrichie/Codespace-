{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Random Forest Regressor(Cairo)","provenance":[{"file_id":"11wyBi6dT23r_kydIpwU0iYHqqBAQsBlR","timestamp":1644757394710}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"D_avO2cM7Ktw"},"outputs":[],"source":["# import necessary modules\n","import pandas as pd\n","import numpy as np\n","import io\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","source":["# import csv file to google colab\n","from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"YnO3uHvE79sU","executionInfo":{"status":"ok","timestamp":1644759276337,"user_tz":-60,"elapsed":1157766,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"2336efe3-236e-4802-9e4f-41de04d4963e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-3a3a9b3e-07d4-49db-8b6c-6aa226ec91b9\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-3a3a9b3e-07d4-49db-8b6c-6aa226ec91b9\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Cairo.csv to Cairo.csv\n"]}]},{"cell_type":"code","source":["#read the csv file using pandas\n","df = pd.read_csv(io.BytesIO(uploaded['Cairo.csv']))\n","# Dataset is now stored in a Pandas Dataframe\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"dyE2eXUi9s2X","executionInfo":{"status":"ok","timestamp":1644759434389,"user_tz":-60,"elapsed":452,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"6f2066a3-1e5e-4437-d513-49a82bbcfd81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-c845036f-1829-4377-9e88-2391b3a81ef6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MO</th>\n","      <th>DY</th>\n","      <th>HR</th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PRECTOTCORR</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11.31</td>\n","      <td>7.41</td>\n","      <td>9.37</td>\n","      <td>6.41</td>\n","      <td>76.81</td>\n","      <td>0.01</td>\n","      <td>100.30</td>\n","      <td>2.21</td>\n","      <td>312.27</td>\n","      <td>4.40</td>\n","      <td>311.90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.92</td>\n","      <td>7.55</td>\n","      <td>9.24</td>\n","      <td>6.47</td>\n","      <td>79.50</td>\n","      <td>0.01</td>\n","      <td>100.30</td>\n","      <td>2.27</td>\n","      <td>306.48</td>\n","      <td>4.55</td>\n","      <td>306.12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>10.19</td>\n","      <td>7.59</td>\n","      <td>8.89</td>\n","      <td>6.47</td>\n","      <td>83.81</td>\n","      <td>0.00</td>\n","      <td>100.31</td>\n","      <td>2.32</td>\n","      <td>295.96</td>\n","      <td>4.42</td>\n","      <td>295.52</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>10.37</td>\n","      <td>7.64</td>\n","      <td>9.01</td>\n","      <td>6.53</td>\n","      <td>83.00</td>\n","      <td>0.00</td>\n","      <td>100.28</td>\n","      <td>2.21</td>\n","      <td>291.84</td>\n","      <td>4.28</td>\n","      <td>291.55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>10.47</td>\n","      <td>7.63</td>\n","      <td>9.05</td>\n","      <td>6.53</td>\n","      <td>82.44</td>\n","      <td>0.00</td>\n","      <td>100.30</td>\n","      <td>2.20</td>\n","      <td>287.54</td>\n","      <td>4.41</td>\n","      <td>287.54</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87667</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>19</td>\n","      <td>13.74</td>\n","      <td>7.73</td>\n","      <td>10.73</td>\n","      <td>6.59</td>\n","      <td>67.00</td>\n","      <td>0.00</td>\n","      <td>100.15</td>\n","      <td>3.51</td>\n","      <td>344.11</td>\n","      <td>7.05</td>\n","      <td>344.52</td>\n","    </tr>\n","    <tr>\n","      <th>87668</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>20</td>\n","      <td>13.07</td>\n","      <td>8.94</td>\n","      <td>11.00</td>\n","      <td>7.14</td>\n","      <td>76.00</td>\n","      <td>0.00</td>\n","      <td>100.15</td>\n","      <td>3.62</td>\n","      <td>0.37</td>\n","      <td>7.43</td>\n","      <td>0.60</td>\n","    </tr>\n","    <tr>\n","      <th>87669</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>21</td>\n","      <td>12.35</td>\n","      <td>10.08</td>\n","      <td>11.22</td>\n","      <td>7.69</td>\n","      <td>86.12</td>\n","      <td>0.00</td>\n","      <td>100.13</td>\n","      <td>3.48</td>\n","      <td>14.97</td>\n","      <td>7.31</td>\n","      <td>15.18</td>\n","    </tr>\n","    <tr>\n","      <th>87670</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>11.63</td>\n","      <td>10.90</td>\n","      <td>11.27</td>\n","      <td>8.12</td>\n","      <td>95.25</td>\n","      <td>0.00</td>\n","      <td>100.10</td>\n","      <td>3.19</td>\n","      <td>25.25</td>\n","      <td>6.72</td>\n","      <td>25.17</td>\n","    </tr>\n","    <tr>\n","      <th>87671</th>\n","      <td>2020</td>\n","      <td>12</td>\n","      <td>31</td>\n","      <td>23</td>\n","      <td>10.98</td>\n","      <td>11.48</td>\n","      <td>11.23</td>\n","      <td>8.48</td>\n","      <td>100.00</td>\n","      <td>0.00</td>\n","      <td>100.09</td>\n","      <td>2.89</td>\n","      <td>26.98</td>\n","      <td>5.82</td>\n","      <td>27.08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87672 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c845036f-1829-4377-9e88-2391b3a81ef6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c845036f-1829-4377-9e88-2391b3a81ef6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c845036f-1829-4377-9e88-2391b3a81ef6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       YEAR  MO  DY  HR    T2M  ...      PS  WS10M   WD10M  WS50M   WD50M\n","0      2011   1   1   0  11.31  ...  100.30   2.21  312.27   4.40  311.90\n","1      2011   1   1   1  10.92  ...  100.30   2.27  306.48   4.55  306.12\n","2      2011   1   1   2  10.19  ...  100.31   2.32  295.96   4.42  295.52\n","3      2011   1   1   3  10.37  ...  100.28   2.21  291.84   4.28  291.55\n","4      2011   1   1   4  10.47  ...  100.30   2.20  287.54   4.41  287.54\n","...     ...  ..  ..  ..    ...  ...     ...    ...     ...    ...     ...\n","87667  2020  12  31  19  13.74  ...  100.15   3.51  344.11   7.05  344.52\n","87668  2020  12  31  20  13.07  ...  100.15   3.62    0.37   7.43    0.60\n","87669  2020  12  31  21  12.35  ...  100.13   3.48   14.97   7.31   15.18\n","87670  2020  12  31  22  11.63  ...  100.10   3.19   25.25   6.72   25.17\n","87671  2020  12  31  23  10.98  ...  100.09   2.89   26.98   5.82   27.08\n","\n","[87672 rows x 15 columns]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1Beqohw-Loc","executionInfo":{"status":"ok","timestamp":1644759531631,"user_tz":-60,"elapsed":435,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"a9127649-051d-4f88-ab1f-060bafd80480"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["YEAR           0\n","MO             0\n","DY             0\n","HR             0\n","T2M            0\n","T2MDEW         0\n","T2MWET         0\n","QV2M           0\n","RH2M           0\n","PRECTOTCORR    0\n","PS             0\n","WS10M          0\n","WD10M          0\n","WS50M          0\n","WD50M          0\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ed89woYQ-MsG","executionInfo":{"status":"ok","timestamp":1644759539658,"user_tz":-60,"elapsed":430,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"bc068fe3-abc7-4668-c5e6-0703e9da3304"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 87672 entries, 0 to 87671\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   YEAR         87672 non-null  int64  \n"," 1   MO           87672 non-null  int64  \n"," 2   DY           87672 non-null  int64  \n"," 3   HR           87672 non-null  int64  \n"," 4   T2M          87672 non-null  float64\n"," 5   T2MDEW       87672 non-null  float64\n"," 6   T2MWET       87672 non-null  float64\n"," 7   QV2M         87672 non-null  float64\n"," 8   RH2M         87672 non-null  float64\n"," 9   PRECTOTCORR  87672 non-null  float64\n"," 10  PS           87672 non-null  float64\n"," 11  WS10M        87672 non-null  float64\n"," 12  WD10M        87672 non-null  float64\n"," 13  WS50M        87672 non-null  float64\n"," 14  WD50M        87672 non-null  float64\n","dtypes: float64(11), int64(4)\n","memory usage: 10.0 MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":364},"id":"x7UXAKGn-aB-","executionInfo":{"status":"ok","timestamp":1644759545204,"user_tz":-60,"elapsed":413,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"73bd0c56-eb98-4639-d781-4b1eb8696258"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-b9423f9e-9260-4846-af92-1ed8ce4e6404\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MO</th>\n","      <th>DY</th>\n","      <th>HR</th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PRECTOTCORR</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","      <td>87672.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2015.500411</td>\n","      <td>6.522310</td>\n","      <td>15.731454</td>\n","      <td>11.500000</td>\n","      <td>21.795937</td>\n","      <td>9.073548</td>\n","      <td>15.434753</td>\n","      <td>7.699686</td>\n","      <td>51.628795</td>\n","      <td>0.010771</td>\n","      <td>99.799788</td>\n","      <td>4.021183</td>\n","      <td>184.190589</td>\n","      <td>5.716070</td>\n","      <td>183.833496</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.872679</td>\n","      <td>3.448893</td>\n","      <td>8.800909</td>\n","      <td>6.922226</td>\n","      <td>8.673440</td>\n","      <td>5.645781</td>\n","      <td>5.635882</td>\n","      <td>2.894113</td>\n","      <td>25.738989</td>\n","      <td>0.241249</td>\n","      <td>0.480745</td>\n","      <td>1.698232</td>\n","      <td>135.908961</td>\n","      <td>2.133524</td>\n","      <td>135.997954</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2011.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.420000</td>\n","      <td>-12.700000</td>\n","      <td>-3.230000</td>\n","      <td>1.340000</td>\n","      <td>4.250000</td>\n","      <td>0.000000</td>\n","      <td>97.600000</td>\n","      <td>0.070000</td>\n","      <td>0.000000</td>\n","      <td>0.020000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2013.000000</td>\n","      <td>4.000000</td>\n","      <td>8.000000</td>\n","      <td>5.750000</td>\n","      <td>15.080000</td>\n","      <td>5.260000</td>\n","      <td>10.870000</td>\n","      <td>5.550000</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","      <td>99.440000</td>\n","      <td>2.780000</td>\n","      <td>39.190000</td>\n","      <td>4.220000</td>\n","      <td>39.030000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2016.000000</td>\n","      <td>7.000000</td>\n","      <td>16.000000</td>\n","      <td>11.500000</td>\n","      <td>21.530000</td>\n","      <td>9.080000</td>\n","      <td>15.760000</td>\n","      <td>7.200000</td>\n","      <td>48.620000</td>\n","      <td>0.000000</td>\n","      <td>99.770000</td>\n","      <td>3.760000</td>\n","      <td>221.520000</td>\n","      <td>5.590000</td>\n","      <td>220.595000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2018.000000</td>\n","      <td>10.000000</td>\n","      <td>23.000000</td>\n","      <td>17.250000</td>\n","      <td>27.870000</td>\n","      <td>13.080000</td>\n","      <td>20.330000</td>\n","      <td>9.460000</td>\n","      <td>73.060000</td>\n","      <td>0.000000</td>\n","      <td>100.120000</td>\n","      <td>5.060000</td>\n","      <td>320.542500</td>\n","      <td>7.180000</td>\n","      <td>320.510000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2020.000000</td>\n","      <td>12.000000</td>\n","      <td>31.000000</td>\n","      <td>23.000000</td>\n","      <td>45.410000</td>\n","      <td>23.260000</td>\n","      <td>28.860000</td>\n","      <td>18.070000</td>\n","      <td>100.000000</td>\n","      <td>35.140000</td>\n","      <td>101.560000</td>\n","      <td>13.690000</td>\n","      <td>359.950000</td>\n","      <td>17.150000</td>\n","      <td>359.950000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9423f9e-9260-4846-af92-1ed8ce4e6404')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b9423f9e-9260-4846-af92-1ed8ce4e6404 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b9423f9e-9260-4846-af92-1ed8ce4e6404');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["               YEAR            MO  ...         WS50M         WD50M\n","count  87672.000000  87672.000000  ...  87672.000000  87672.000000\n","mean    2015.500411      6.522310  ...      5.716070    183.833496\n","std        2.872679      3.448893  ...      2.133524    135.997954\n","min     2011.000000      1.000000  ...      0.020000      0.000000\n","25%     2013.000000      4.000000  ...      4.220000     39.030000\n","50%     2016.000000      7.000000  ...      5.590000    220.595000\n","75%     2018.000000     10.000000  ...      7.180000    320.510000\n","max     2020.000000     12.000000  ...     17.150000    359.950000\n","\n","[8 rows x 15 columns]"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# use the pands .corr() function to compute pairwise correlations for the dataframe\n","corr = df.corr()\n","# visualise the data with seaborn\n","mask = np.triu(np.ones_like(corr, dtype=np.bool))\n","sns.set_style(style = 'white')\n","f, ax = plt.subplots(figsize=(11, 9))\n","cmap = sns.diverging_palette(10, 250, as_cmap=True)\n","sns.heatmap(corr, mask=mask, cmap=cmap, \n","        square=True,\n","        linewidths=.5, cbar_kws={\"shrink\": .5}, ax=ax)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":618},"id":"c0CWGPcG-bCg","executionInfo":{"status":"ok","timestamp":1644759552060,"user_tz":-60,"elapsed":1220,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"cd6f91a7-bd1f-4d56-a797-b46ce83c234f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5e17ff2550>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 792x648 with 2 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["# Dropping PRECTOTCORR from the dataset\n","df.drop(['PRECTOTCORR'], axis = 1, inplace = True)"],"metadata":{"id":"_TzzZsrE-z2s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gAzY5FFS-1NB","executionInfo":{"status":"ok","timestamp":1644759573725,"user_tz":-60,"elapsed":936,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"f994587d-563c-42df-a64e-3c17332502dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-0ccf6493-dd03-4971-952f-7f25edcf9e1e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>MO</th>\n","      <th>DY</th>\n","      <th>HR</th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11.31</td>\n","      <td>7.41</td>\n","      <td>9.37</td>\n","      <td>6.41</td>\n","      <td>76.81</td>\n","      <td>100.30</td>\n","      <td>2.21</td>\n","      <td>312.27</td>\n","      <td>4.40</td>\n","      <td>311.90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10.92</td>\n","      <td>7.55</td>\n","      <td>9.24</td>\n","      <td>6.47</td>\n","      <td>79.50</td>\n","      <td>100.30</td>\n","      <td>2.27</td>\n","      <td>306.48</td>\n","      <td>4.55</td>\n","      <td>306.12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>10.19</td>\n","      <td>7.59</td>\n","      <td>8.89</td>\n","      <td>6.47</td>\n","      <td>83.81</td>\n","      <td>100.31</td>\n","      <td>2.32</td>\n","      <td>295.96</td>\n","      <td>4.42</td>\n","      <td>295.52</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>10.37</td>\n","      <td>7.64</td>\n","      <td>9.01</td>\n","      <td>6.53</td>\n","      <td>83.00</td>\n","      <td>100.28</td>\n","      <td>2.21</td>\n","      <td>291.84</td>\n","      <td>4.28</td>\n","      <td>291.55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>10.47</td>\n","      <td>7.63</td>\n","      <td>9.05</td>\n","      <td>6.53</td>\n","      <td>82.44</td>\n","      <td>100.30</td>\n","      <td>2.20</td>\n","      <td>287.54</td>\n","      <td>4.41</td>\n","      <td>287.54</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ccf6493-dd03-4971-952f-7f25edcf9e1e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ccf6493-dd03-4971-952f-7f25edcf9e1e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ccf6493-dd03-4971-952f-7f25edcf9e1e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   YEAR  MO  DY  HR    T2M  T2MDEW  ...   RH2M      PS  WS10M   WD10M  WS50M   WD50M\n","0  2011   1   1   0  11.31    7.41  ...  76.81  100.30   2.21  312.27   4.40  311.90\n","1  2011   1   1   1  10.92    7.55  ...  79.50  100.30   2.27  306.48   4.55  306.12\n","2  2011   1   1   2  10.19    7.59  ...  83.81  100.31   2.32  295.96   4.42  295.52\n","3  2011   1   1   3  10.37    7.64  ...  83.00  100.28   2.21  291.84   4.28  291.55\n","4  2011   1   1   4  10.47    7.63  ...  82.44  100.30   2.20  287.54   4.41  287.54\n","\n","[5 rows x 14 columns]"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Important Machine Learning modules\n","from sklearn.metrics import accuracy_score, mean_squared_error, r2_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import confusion_matrix"],"metadata":{"id":"mR6J1OJ-8Djg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Prepare the training set\n","\n","# X = feature values, all the columns except the last column\n","X = df.iloc[:, 7: 14]\n","\n","# y = target values, last column of the data frame\n","y = df.iloc[:, 4: 7]"],"metadata":{"id":"-Qwg_gUo_IzU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4V6Y7_qP_N-1","executionInfo":{"status":"ok","timestamp":1644759583637,"user_tz":-60,"elapsed":80,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"c7992020-4cec-406f-88ad-bad8a6de028a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['QV2M', 'RH2M', 'PS', 'WS10M', 'WD10M', 'WS50M', 'WD50M'], dtype='object')"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["y.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HoW3lkgh_TC3","executionInfo":{"status":"ok","timestamp":1644759585253,"user_tz":-60,"elapsed":14,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"6f3ec65d-f78d-40ba-82c6-f59382e4fbc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['T2M', 'T2MDEW', 'T2MWET'], dtype='object')"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bWFqDBsU_U2H","executionInfo":{"status":"ok","timestamp":1644759585861,"user_tz":-60,"elapsed":15,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"b4f7bbc3-d768-47e5-b1e3-0e9d60137a88"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-e7178b0b-fb10-49d5-8b30-44ccf8555c36\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>QV2M</th>\n","      <th>RH2M</th>\n","      <th>PS</th>\n","      <th>WS10M</th>\n","      <th>WD10M</th>\n","      <th>WS50M</th>\n","      <th>WD50M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.41</td>\n","      <td>76.81</td>\n","      <td>100.30</td>\n","      <td>2.21</td>\n","      <td>312.27</td>\n","      <td>4.40</td>\n","      <td>311.90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.47</td>\n","      <td>79.50</td>\n","      <td>100.30</td>\n","      <td>2.27</td>\n","      <td>306.48</td>\n","      <td>4.55</td>\n","      <td>306.12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6.47</td>\n","      <td>83.81</td>\n","      <td>100.31</td>\n","      <td>2.32</td>\n","      <td>295.96</td>\n","      <td>4.42</td>\n","      <td>295.52</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6.53</td>\n","      <td>83.00</td>\n","      <td>100.28</td>\n","      <td>2.21</td>\n","      <td>291.84</td>\n","      <td>4.28</td>\n","      <td>291.55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6.53</td>\n","      <td>82.44</td>\n","      <td>100.30</td>\n","      <td>2.20</td>\n","      <td>287.54</td>\n","      <td>4.41</td>\n","      <td>287.54</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87667</th>\n","      <td>6.59</td>\n","      <td>67.00</td>\n","      <td>100.15</td>\n","      <td>3.51</td>\n","      <td>344.11</td>\n","      <td>7.05</td>\n","      <td>344.52</td>\n","    </tr>\n","    <tr>\n","      <th>87668</th>\n","      <td>7.14</td>\n","      <td>76.00</td>\n","      <td>100.15</td>\n","      <td>3.62</td>\n","      <td>0.37</td>\n","      <td>7.43</td>\n","      <td>0.60</td>\n","    </tr>\n","    <tr>\n","      <th>87669</th>\n","      <td>7.69</td>\n","      <td>86.12</td>\n","      <td>100.13</td>\n","      <td>3.48</td>\n","      <td>14.97</td>\n","      <td>7.31</td>\n","      <td>15.18</td>\n","    </tr>\n","    <tr>\n","      <th>87670</th>\n","      <td>8.12</td>\n","      <td>95.25</td>\n","      <td>100.10</td>\n","      <td>3.19</td>\n","      <td>25.25</td>\n","      <td>6.72</td>\n","      <td>25.17</td>\n","    </tr>\n","    <tr>\n","      <th>87671</th>\n","      <td>8.48</td>\n","      <td>100.00</td>\n","      <td>100.09</td>\n","      <td>2.89</td>\n","      <td>26.98</td>\n","      <td>5.82</td>\n","      <td>27.08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87672 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7178b0b-fb10-49d5-8b30-44ccf8555c36')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e7178b0b-fb10-49d5-8b30-44ccf8555c36 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e7178b0b-fb10-49d5-8b30-44ccf8555c36');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       QV2M    RH2M      PS  WS10M   WD10M  WS50M   WD50M\n","0      6.41   76.81  100.30   2.21  312.27   4.40  311.90\n","1      6.47   79.50  100.30   2.27  306.48   4.55  306.12\n","2      6.47   83.81  100.31   2.32  295.96   4.42  295.52\n","3      6.53   83.00  100.28   2.21  291.84   4.28  291.55\n","4      6.53   82.44  100.30   2.20  287.54   4.41  287.54\n","...     ...     ...     ...    ...     ...    ...     ...\n","87667  6.59   67.00  100.15   3.51  344.11   7.05  344.52\n","87668  7.14   76.00  100.15   3.62    0.37   7.43    0.60\n","87669  7.69   86.12  100.13   3.48   14.97   7.31   15.18\n","87670  8.12   95.25  100.10   3.19   25.25   6.72   25.17\n","87671  8.48  100.00  100.09   2.89   26.98   5.82   27.08\n","\n","[87672 rows x 7 columns]"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"mXqFt-nA_V4g","executionInfo":{"status":"ok","timestamp":1644759602927,"user_tz":-60,"elapsed":417,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"b1c83f05-88f2-4cab-e4fd-4745f4a3917b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-8153acfe-3ab4-4fd4-bfbf-cf1a0c489bc3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>T2M</th>\n","      <th>T2MDEW</th>\n","      <th>T2MWET</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11.31</td>\n","      <td>7.41</td>\n","      <td>9.37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.92</td>\n","      <td>7.55</td>\n","      <td>9.24</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10.19</td>\n","      <td>7.59</td>\n","      <td>8.89</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10.37</td>\n","      <td>7.64</td>\n","      <td>9.01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10.47</td>\n","      <td>7.63</td>\n","      <td>9.05</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87667</th>\n","      <td>13.74</td>\n","      <td>7.73</td>\n","      <td>10.73</td>\n","    </tr>\n","    <tr>\n","      <th>87668</th>\n","      <td>13.07</td>\n","      <td>8.94</td>\n","      <td>11.00</td>\n","    </tr>\n","    <tr>\n","      <th>87669</th>\n","      <td>12.35</td>\n","      <td>10.08</td>\n","      <td>11.22</td>\n","    </tr>\n","    <tr>\n","      <th>87670</th>\n","      <td>11.63</td>\n","      <td>10.90</td>\n","      <td>11.27</td>\n","    </tr>\n","    <tr>\n","      <th>87671</th>\n","      <td>10.98</td>\n","      <td>11.48</td>\n","      <td>11.23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87672 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8153acfe-3ab4-4fd4-bfbf-cf1a0c489bc3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8153acfe-3ab4-4fd4-bfbf-cf1a0c489bc3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8153acfe-3ab4-4fd4-bfbf-cf1a0c489bc3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["         T2M  T2MDEW  T2MWET\n","0      11.31    7.41    9.37\n","1      10.92    7.55    9.24\n","2      10.19    7.59    8.89\n","3      10.37    7.64    9.01\n","4      10.47    7.63    9.05\n","...      ...     ...     ...\n","87667  13.74    7.73   10.73\n","87668  13.07    8.94   11.00\n","87669  12.35   10.08   11.22\n","87670  11.63   10.90   11.27\n","87671  10.98   11.48   11.23\n","\n","[87672 rows x 3 columns]"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Splitting the dataset into trainingset and testset\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=42)"],"metadata":{"id":"ayalYSKF_WtB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["regressor = RandomForestRegressor(n_estimators=100, random_state=42)\n","regressor.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WT6Hvn2y_ybR","executionInfo":{"status":"ok","timestamp":1644759649252,"user_tz":-60,"elapsed":38119,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"4a2532ff-003d-4cb9-b187-cad8cd81619e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(random_state=42)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["predictions = regressor.predict(X_test)"],"metadata":{"id":"EdzG87fUA7ng"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qp8NGCi6BPHm","executionInfo":{"status":"ok","timestamp":1644759650276,"user_tz":-60,"elapsed":37,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"59e0fd2a-9e74-4d73-9825-6470a99f9ae5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[23.4229, 18.0543, 20.7376],\n","       [24.0462, 17.3397, 20.693 ],\n","       [23.0987, -4.5913,  9.2546],\n","       ...,\n","       [28.0249, 11.2498, 19.6365],\n","       [36.4931, 11.0657, 23.7794],\n","       [21.5054, 17.8268, 19.6695]])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["predictions[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"78PzoB7oBQ8z","executionInfo":{"status":"ok","timestamp":1644759650278,"user_tz":-60,"elapsed":32,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"c944e9c9-585e-4057-af0f-a4e297f8ad41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([24.0462, 17.3397, 20.693 ])"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","import math\n","\n","mse = mean_squared_error(y_test, predictions)\n","rmse = math.sqrt(mse)\n","\n","print('Mean Squared Error',mse)\n","print('Root Mean Squared Error',rmse)\n","print('Accuracy for Random Forest',100*max(0,rmse))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c4pchabIWTPA","executionInfo":{"status":"ok","timestamp":1644759650280,"user_tz":-60,"elapsed":28,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"8fc24813-bbd5-477a-eeb8-4c3be7e49f27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error 0.013873236802144246\n","Root Mean Squared Error 0.11778470529803199\n","Accuracy for Random Forest 11.778470529803199\n"]}]},{"cell_type":"code","source":["#Import scikit-learn metrics module for accuracy calculation\n","from sklearn.metrics import r2_score\n","\n","# Model Accuracy, how often is the regressor correct?\n","Accuracy = r2_score(y_test, predictions)\n","print(Accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OnNrxODAS4-v","executionInfo":{"status":"ok","timestamp":1644759650282,"user_tz":-60,"elapsed":24,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"77682591-95c4-4700-b410-cb31d166209d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9996849367553734\n"]}]},{"cell_type":"code","source":["plt.figure()\n","plt.plot(predictions, \"r^\", label=\"RandomForestRegressor\")\n","\n","plt.tick_params(axis=\"x\", which=\"both\", bottom=False, top=False, labelbottom=False)\n","plt.ylabel(\"predicted\")\n","plt.xlabel(\"training samples\")\n","plt.legend(loc=\"best\")\n","plt.title(\"Regressor predictions and their average\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"5QV9EcHvrDUS","executionInfo":{"status":"ok","timestamp":1644759651135,"user_tz":-60,"elapsed":872,"user":{"displayName":"Charles Oredola","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhnpwCalP23D3Pr8M6WnJ42nMBIpm7KfjhgDPqn=s64","userId":"14286154376090524793"}},"outputId":"2aead4e1-7842-4cb6-c10c-9f7e95bc86a1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]}]}